@model backEnd.Models.RegisterViewModel
@{
    ViewBag.Title = "Create";
}

<div class="section-content">
    <div class="content-head">
        <div class="row">
            <div class="col-md-6">
                <h2>User Registretion</h2>
            </div>
            <div class="col-md-6">
                <div class="corner-content float-right">
                    <button class="content-settings" data-toggle="tooltip" data-placement="top" title="Settings"><i class="fa fa-cog"></i></button>
                    <button class="content-refresh" data-toggle="tooltip" data-placement="top" title="Reload"><i class="fa fa-refresh"></i></button>
                    <button class="content-collapse" data-toggle="tooltip" data-placement="top" title="Collapse"><i class="fa fa-angle-down"></i></button>
                    <button class="content-close" data-toggle="tooltip" data-placement="top" title="Close"><i class="fa fa-close"></i></button>
                </div><!-- /.corner-content -->
            </div>
        </div>

        @using (Html.BeginForm("Create", "UsersAdmin", FormMethod.Post, new { @class = "form-horizontal", role = "form" , enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary("", new { @class = "text-error" })


            @*<div class="form-group">
                <label class="control-label">UserName</label>
            
                    @Html.TextBoxFor(m => m.username, new { @class = "form-control" })
              
            </div>*@

            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = " control-label" })
               
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
             
            </div>

            <div class="form-group">
                <label class="control-label">User Profile Pic</label>


                <input type="file" id="file" name="file" class="form-control" onchange="return fileValidationMlogo()" />

                <div id="imagePreviewMlogo"></div>
                <div id="errorMlogo">
                    @*<span class="text-danger" style="display:none">Please upload file having extensions .jpeg/.jpg/.png/.gif only.</span>*@
                </div>

            </div>

            @*<div class="form-group">
                <label class="control-label">User Status</label>
                <select class="form-control" id="status" name="status">
                    <option value="Active">Active</option>
                    <option value="Dactive">Dactive</option>
                </select>
            </div>*@
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
           
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
   
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
           
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
          
            </div>
            <div class="form-group">
                <label class=" control-label">
                    Select User Group
                </label>
                <div >
                    @foreach (var item in (SelectList)ViewBag.GroupsList)
                    {
                        <div>
                            <input type="checkbox" name="selectedGroups" value="@item.Value" class="checkbox-inline" />
                            @Html.Label(item.Text, new { @class = "control-label" })
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-primary" value="Create" />
                </div>
            </div>
        }

    </div>
</div>



@section Scripts {
    <script>
        //this is image validation
        function fileValidationMlogo() {

            var fileInput = document.getElementById('file');
            var filePath = fileInput.value;
            var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
            if (!allowedExtensions.exec(filePath)) {
                // $('#error').show();
                var error = 'Please upload file having extensions .jpeg/.jpg/.png/.gif only.';
                document.getElementById('errorMlogo').innerHTML = '<span class="text-danger">' + error + '</span>'
                //alert();
                fileInput.value = '';
                return false;
            } else {
                //Image preview
                if (fileInput.files && fileInput.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#errorMlogo').hide();
                        $('#editHiddenMlogo').hide();
                        document.getElementById('imagePreviewMlogo').innerHTML = '<img width="140" height="100" class="img-thumbnail" src="' + e.target.result + '"/>';
                    };
                    reader.readAsDataURL(fileInput.files[0]);
                }
            }
        }
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
