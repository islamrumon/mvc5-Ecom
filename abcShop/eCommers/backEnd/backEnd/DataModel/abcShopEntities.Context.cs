//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace backEnd.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class abcShopEntities : DbContext
    {
        public abcShopEntities()
            : base("name=abcShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<address_tbl> address_tbl { get; set; }
        public virtual DbSet<admin_user_tbl> admin_user_tbl { get; set; }
        public virtual DbSet<ApplicationGroup> ApplicationGroups { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<backendGroupRole> backendGroupRoles { get; set; }
        public virtual DbSet<backendUserGroup> backendUserGroups { get; set; }
        public virtual DbSet<banner_tbl> banner_tbl { get; set; }
        public virtual DbSet<category_tbl> category_tbl { get; set; }
        public virtual DbSet<contact_tbl> contact_tbl { get; set; }
        public virtual DbSet<coupon_history_tbl> coupon_history_tbl { get; set; }
        public virtual DbSet<coupon_product_tbl> coupon_product_tbl { get; set; }
        public virtual DbSet<coupon_tbl> coupon_tbl { get; set; }
        public virtual DbSet<customer_reward_tbl> customer_reward_tbl { get; set; }
        public virtual DbSet<customer_tbl> customer_tbl { get; set; }
        public virtual DbSet<customer_transaction_tbl> customer_transaction_tbl { get; set; }
        public virtual DbSet<customer_wishlist_tbl> customer_wishlist_tbl { get; set; }
        public virtual DbSet<FRole> FRoles { get; set; }
        public virtual DbSet<FUserClaim> FUserClaims { get; set; }
        public virtual DbSet<FUserLogin> FUserLogins { get; set; }
        public virtual DbSet<FUserRole> FUserRoles { get; set; }
        public virtual DbSet<FUser> FUsers { get; set; }
        public virtual DbSet<item_ladger> item_ladger { get; set; }
        public virtual DbSet<length_class_tbl> length_class_tbl { get; set; }
        public virtual DbSet<manufacturer_tbl> manufacturer_tbl { get; set; }
        public virtual DbSet<newsletter_tbl> newsletter_tbl { get; set; }
        public virtual DbSet<notificatation_tbl> notificatation_tbl { get; set; }
        public virtual DbSet<order_history_tbl> order_history_tbl { get; set; }
        public virtual DbSet<order_product_tbl> order_product_tbl { get; set; }
        public virtual DbSet<order_status_tbl> order_status_tbl { get; set; }
        public virtual DbSet<order_tbl> order_tbl { get; set; }
        public virtual DbSet<order_total_tbl> order_total_tbl { get; set; }
        public virtual DbSet<pages_tbl> pages_tbl { get; set; }
        public virtual DbSet<payment_method_tbl> payment_method_tbl { get; set; }
        public virtual DbSet<product_discount_tbl> product_discount_tbl { get; set; }
        public virtual DbSet<product_image_tbl> product_image_tbl { get; set; }
        public virtual DbSet<product_related_tbl> product_related_tbl { get; set; }
        public virtual DbSet<product_review_id> product_review_id { get; set; }
        public virtual DbSet<product_special_tbl> product_special_tbl { get; set; }
        public virtual DbSet<product_supplier> product_supplier { get; set; }
        public virtual DbSet<product_tbl> product_tbl { get; set; }
        public virtual DbSet<product_to_category_tbl> product_to_category_tbl { get; set; }
        public virtual DbSet<product_variant_tbl> product_variant_tbl { get; set; }
        public virtual DbSet<product_variant_value> product_variant_value { get; set; }
        public virtual DbSet<purchase> purchases { get; set; }
        public virtual DbSet<purchase_details> purchase_details { get; set; }
        public virtual DbSet<shipping_method> shipping_method { get; set; }
        public virtual DbSet<site_option_tbl> site_option_tbl { get; set; }
        public virtual DbSet<site_setting_tbl> site_setting_tbl { get; set; }
        public virtual DbSet<slider_image_tbl> slider_image_tbl { get; set; }
        public virtual DbSet<slider_tbl> slider_tbl { get; set; }
        public virtual DbSet<social_tbl> social_tbl { get; set; }
        public virtual DbSet<stock_status_tbl> stock_status_tbl { get; set; }
        public virtual DbSet<Supplier_tbl> Supplier_tbl { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<userCart_tbl> userCart_tbl { get; set; }
        public virtual DbSet<variant> variants { get; set; }
        public virtual DbSet<variant_unit> variant_unit { get; set; }
        public virtual DbSet<Warehouse_tbl> Warehouse_tbl { get; set; }
        public virtual DbSet<weight_class_tbl> weight_class_tbl { get; set; }
        public virtual DbSet<Parent_Category> Parent_Category { get; set; }
        public virtual DbSet<product_variant_unit_VT> product_variant_unit_VT { get; set; }
        public virtual DbSet<ProductViewTable> ProductViewTables { get; set; }
        public virtual DbSet<aboutTbl> aboutTbls { get; set; }
        public virtual DbSet<social_site> social_sites { get; set; }
    
        public virtual ObjectResult<prcFilter_Result> prcFilter(Nullable<int> max, Nullable<int> min, Nullable<int> cid)
        {
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcFilter_Result>("prcFilter", maxParameter, minParameter, cidParameter);
        }
    
        public virtual ObjectResult<prcSearch_Result> prcSearch(string key)
        {
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSearch_Result>("prcSearch", keyParameter);
        }
    
        public virtual ObjectResult<prcVeriantSearch_Result> prcVeriantSearch(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcVeriantSearch_Result>("prcVeriantSearch", idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateCart(Nullable<int> quantity, Nullable<decimal> totalPrice, Nullable<int> cartID, string sessionID)
        {
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("totalPrice", totalPrice) :
                new ObjectParameter("totalPrice", typeof(decimal));
    
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(int));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("sessionID", sessionID) :
                new ObjectParameter("sessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCart", quantityParameter, totalPriceParameter, cartIDParameter, sessionIDParameter);
        }
    }
}
